restructure a bit:
include/chess/
  defs.hpp          // enums (Color, Piece, Square), fixed-size aliases (U64), helper macros
  bitboard.hpp      // FILE_*, RANK_*, BB(sq), other pure bitboard helpers
  attacks.hpp       // precomputed attack tables (KNIGHT/ KING / rays if you add them)
  move.hpp          // Move struct + flags (MF_*)
  movegen.hpp       // decls for per-piece generators + function array
  board.hpp         // Board class: state, recompute(), apply/applied(), isSquareAttacked()
  debug.hpp         // printBB/printBoard
  fen.hpp

src/
  board.cpp
  movegen.cpp       // define the single dispatch table + generator bodies (if not header-only)
  // I think all in header attacks.cpp       // only if you donâ€™t keep them constexpr in header
  debug.cpp         // printing 
  fen.cpp


make eval() function!